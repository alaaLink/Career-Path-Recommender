@model CareerPathRecommender.Core.Services.SkillGapAnalysis

<div class="fade-in">
    <h6 class="mb-4">
        <i class="fas fa-chart-bar text-info"></i>
        Career Path Analysis Results
    </h6>
    
    <div class="row">
        <!-- Missing Skills -->
        <div class="col-lg-6 mb-4">
            <div class="h-100">
                <div class="d-flex align-items-center mb-3">
                    <div class="bg-danger rounded-circle p-2 me-3">
                        <i class="fas fa-exclamation-triangle text-white"></i>
                    </div>
                    <div>
                        <h6 class="mb-0 text-danger">Skills to Acquire</h6>
                        <small class="text-muted">Critical gaps for your target role</small>
                    </div>
                </div>
                
                @if (Model.MissingSkills.Any())
                {
                    @foreach (var gap in Model.MissingSkills.OrderByDescending(g => g.Priority))
                    {
                        <div class="skill-gap-item p-3 mb-3 rounded shadow-sm priority-@gap.Priority" style="border-left: 4px solid;">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <div>
                                    <h6 class="mb-1 fw-bold">@gap.SkillName</h6>
                                    <div class="d-flex align-items-center gap-2 mb-2">
                                        <span class="badge bg-secondary">Current: @gap.CurrentLevel</span>
                                        <i class="fas fa-arrow-right text-muted"></i>
                                        <span class="badge bg-success">Target: @gap.RequiredLevel</span>
                                    </div>
                                </div>
                                <div class="text-end">
                                    <div class="d-flex align-items-center">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fas fa-star @(i <= gap.Priority ? "text-warning" : "text-muted")" style="font-size: 0.8rem;"></i>
                                        }
                                    </div>
                                    <small class="text-muted">Priority</small>
                                </div>
                            </div>
                            <p class="small text-muted mb-0">
                                <i class="fas fa-lightbulb text-warning me-1"></i>
                                @gap.Reasoning
                            </p>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center p-4 bg-light rounded">
                        <i class="fas fa-check-circle fa-2x text-success mb-2"></i>
                        <p class="mb-0 text-success">Great! No critical skill gaps identified.</p>
                    </div>
                }
            </div>
        </div>

        <!-- Skills to Improve -->
        <div class="col-lg-6 mb-4">
            <div class="h-100">
                <div class="d-flex align-items-center mb-3">
                    <div class="bg-warning rounded-circle p-2 me-3">
                        <i class="fas fa-arrow-up text-white"></i>
                    </div>
                    <div>
                        <h6 class="mb-0 text-warning">Skills to Enhance</h6>
                        <small class="text-muted">Areas for improvement and growth</small>
                    </div>
                </div>
                
                @if (Model.SkillsToImprove.Any())
                {
                    @foreach (var gap in Model.SkillsToImprove.OrderByDescending(g => g.Priority))
                    {
                        <div class="skill-gap-item p-3 mb-3 rounded shadow-sm priority-@gap.Priority" style="border-left: 4px solid;">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <div>
                                    <h6 class="mb-1 fw-bold">@gap.SkillName</h6>
                                    <div class="d-flex align-items-center gap-2 mb-2">
                                        <span class="badge bg-info">@gap.CurrentLevel</span>
                                        <i class="fas fa-arrow-right text-muted"></i>
                                        <span class="badge bg-primary">@gap.RequiredLevel</span>
                                    </div>
                                </div>
                                <div class="text-end">
                                    <div class="progress-ring position-relative" style="width: 40px; height: 40px;">
                                        <svg width="40" height="40" class="position-absolute">
                                            <circle cx="20" cy="20" r="18" stroke="#e9ecef" stroke-width="3" fill="none"/>
                                            <circle cx="20" cy="20" r="18" stroke="#007bff" stroke-width="3" fill="none"
                                                    stroke-dasharray="@(113 * ((int)gap.CurrentLevel / 4.0))" 
                                                    stroke-dashoffset="0" 
                                                    transform="rotate(-90 20 20)"/>
                                        </svg>
                                        <div class="position-absolute top-50 start-50 translate-middle">
                                            <small class="fw-bold">@((int)gap.CurrentLevel)/4</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <p class="small text-muted mb-0">
                                <i class="fas fa-info-circle text-info me-1"></i>
                                @gap.Reasoning
                            </p>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center p-4 bg-light rounded">
                        <i class="fas fa-trophy fa-2x text-warning mb-2"></i>
                        <p class="mb-0 text-warning">All current skills are at target level!</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Learning Path & Timeline -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-gradient text-white" style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="mb-0">
                                <i class="fas fa-route"></i> Recommended Learning Path
                            </h6>
                            <small class="opacity-75">Your personalized career development roadmap</small>
                        </div>
                        <div class="badge bg-white text-primary">
                            <i class="fas fa-clock me-1"></i>@Model.EstimatedTimeToTargetMonths months
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="learning-path">
                        @{
                            var pathLines = Model.RecommendedLearningPath.Split('\n', StringSplitOptions.RemoveEmptyEntries);
                        }
                        
                        @foreach (var line in pathLines)
                        {
                            if (line.StartsWith("**") && line.EndsWith("**"))
                            {
                                var title = line.Trim('*');
                                <div class="phase-header mt-4 mb-3">
                                    <h6 class="text-primary fw-bold">
                                        <i class="fas fa-flag text-warning me-2"></i>@title
                                    </h6>
                                    <hr class="mt-2" style="border-color: #007bff; border-width: 2px;">
                                </div>
                            }
                            else if (line.StartsWith("â€¢"))
                            {
                                <div class="learning-step mb-2 p-2 rounded bg-light border-start border-3 border-primary">
                                    <i class="fas fa-check-circle text-success me-2"></i>
                                    @line.Substring(1).Trim()
                                </div>
                            }
                            else if (!string.IsNullOrWhiteSpace(line))
                            {
                                <p class="mb-2">@line</p>
                            }
                        }
                    </div>
                    
                    <!-- Action Items -->
                    <div class="mt-4 p-3 bg-primary bg-opacity-10 rounded">
                        <h6 class="text-primary">
                            <i class="fas fa-tasks"></i> Next Steps
                        </h6>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="d-flex align-items-center mb-2">
                                    <i class="fas fa-play-circle text-success me-2"></i>
                                    <span>Start with highest priority skills</span>
                                </div>
                                <div class="d-flex align-items-center mb-2">
                                    <i class="fas fa-user-friends text-info me-2"></i>
                                    <span>Connect with mentors in target role</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="d-flex align-items-center mb-2">
                                    <i class="fas fa-bookmark text-warning me-2"></i>
                                    <span>Enroll in recommended courses</span>
                                </div>
                                <div class="d-flex align-items-center mb-2">
                                    <i class="fas fa-project-diagram text-primary me-2"></i>
                                    <span>Seek relevant project assignments</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Progress Timeline -->
                    <div class="mt-4">
                        <h6 class="mb-3">
                            <i class="fas fa-calendar-alt text-info"></i> Estimated Timeline
                        </h6>
                        <div class="progress mb-2" style="height: 8px;">
                            <div class="progress-bar bg-gradient" style="width: 33%; background: linear-gradient(90deg, #28a745 0%, #20c997 100%);"></div>
                        </div>
                        <div class="d-flex justify-content-between small text-muted">
                            <span>Start (Month 0)</span>
                            <span>Mid-point (Month @(Model.EstimatedTimeToTargetMonths / 2))</span>
                            <span>Target Achievement (Month @Model.EstimatedTimeToTargetMonths)</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .phase-header h6 {
        position: relative;
        padding-left: 20px;
    }
    
    .phase-header h6::before {
        content: '';
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        width: 10px;
        height: 10px;
        border-radius: 50%;
        background: linear-gradient(45deg, #007bff, #00f2fe);
    }
    
    .learning-step {
        transition: all 0.3s ease;
        cursor: pointer;
    }
    
    .learning-step:hover {
        background: linear-gradient(135deg, #e3f2fd 0%, #f3e5f5 100%) !important;
        transform: translateX(5px);
    }
    
    .progress-ring circle {
        transition: stroke-dasharray 0.8s ease;
    }
</style>