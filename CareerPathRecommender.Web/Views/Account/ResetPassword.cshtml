@model CareerPathRecommender.Web.Models.ResetPasswordViewModel
@{
    ViewData["Title"] = "Reset Password";
    Layout = "_AuthLayout";
}

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <div class="auth-logo">
                <i class="fas fa-lock"></i>
            </div>
            <h1 class="auth-title">Reset Password</h1>
            <p class="auth-subtitle">Enter your new password below</p>
        </div>

        <form asp-action="ResetPassword" method="post" class="auth-form" novalidate>
            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
            
            <input asp-for="Email" type="hidden" />
            <input asp-for="Token" type="hidden" />
            
            <div class="form-group">
                <label asp-for="Password" class="form-label">
                    <i class="fas fa-lock"></i>
                    New Password
                </label>
                <div class="password-input-group">
                    <input asp-for="Password" class="form-control" placeholder="Enter new password" />
                    <button type="button" class="password-toggle" onclick="togglePassword('Password')">
                        <i class="fas fa-eye" id="Password-eye"></i>
                    </button>
                </div>
                <span asp-validation-for="Password" class="text-danger"></span>
                
                <!-- Password strength meter -->
                <div class="password-strength-meter">
                    <div class="strength-bar">
                        <div class="strength-fill" id="strength-fill"></div>
                    </div>
                    <div class="strength-text" id="strength-text">Enter a password</div>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="ConfirmPassword" class="form-label">
                    <i class="fas fa-lock"></i>
                    Confirm New Password
                </label>
                <div class="password-input-group">
                    <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm new password" />
                    <button type="button" class="password-toggle" onclick="togglePassword('ConfirmPassword')">
                        <i class="fas fa-eye" id="ConfirmPassword-eye"></i>
                    </button>
                </div>
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary btn-auth">
                <i class="fas fa-save"></i>
                Reset Password
                <div class="btn-loading">
                    <i class="fas fa-spinner fa-spin"></i>
                </div>
            </button>
        </form>

        <div class="auth-footer">
            <p><a asp-action="Login" class="auth-link">Back to Sign In</a></p>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function togglePassword(fieldName) {
            const field = document.getElementById(fieldName);
            const eye = document.getElementById(fieldName + '-eye');
            
            if (field.type === 'password') {
                field.type = 'text';
                eye.classList.remove('fa-eye');
                eye.classList.add('fa-eye-slash');
            } else {
                field.type = 'password';
                eye.classList.remove('fa-eye-slash');
                eye.classList.add('fa-eye');
            }
        }

        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            let feedback = [];

            if (password.length >= 8) strength += 1;
            else feedback.push('at least 8 characters');

            if (/[a-z]/.test(password)) strength += 1;
            else feedback.push('lowercase letter');

            if (/[A-Z]/.test(password)) strength += 1;
            else feedback.push('uppercase letter');

            if (/[0-9]/.test(password)) strength += 1;
            else feedback.push('number');

            if (/[^A-Za-z0-9]/.test(password)) strength += 1;
            else feedback.push('special character');

            return { strength, feedback };
        }

        document.getElementById('Password').addEventListener('input', function() {
            const password = this.value;
            const result = checkPasswordStrength(password);
            const strengthFill = document.getElementById('strength-fill');
            const strengthText = document.getElementById('strength-text');

            const strengthLevels = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
            const strengthColors = ['#dc3545', '#fd7e14', '#ffc107', '#20c997', '#28a745'];

            if (password.length === 0) {
                strengthFill.style.width = '0%';
                strengthText.textContent = 'Enter a password';
                strengthText.style.color = '#6c757d';
                return;
            }

            const strengthPercent = (result.strength / 5) * 100;
            strengthFill.style.width = strengthPercent + '%';
            strengthFill.style.backgroundColor = strengthColors[result.strength - 1] || strengthColors[0];
            
            strengthText.textContent = strengthLevels[result.strength - 1] || 'Very Weak';
            strengthText.style.color = strengthColors[result.strength - 1] || strengthColors[0];

            if (result.feedback.length > 0) {
                strengthText.textContent += ' - Add: ' + result.feedback.join(', ');
            }
        });

        document.querySelector('.auth-form').addEventListener('submit', function() {
            const button = document.querySelector('.btn-auth');
            button.classList.add('loading');
            button.disabled = true;
        });
    </script>
}
