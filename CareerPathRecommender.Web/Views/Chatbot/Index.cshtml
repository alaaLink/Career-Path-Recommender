@{
    ViewData["Title"] = "Career Path Assistant";
    Layout = "_Layout";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-comments me-2"></i>Career Path Assistant</h5>
                </div>
                <div class="card-body p-0">
                    <div id="chat-messages" class="chat-messages p-3" style="height: 400px; overflow-y: auto;">
                        <div class="message bot-message mb-3">
                            <div class="message-content p-2 rounded">
                                <small class="text-muted">Assistant</small>
                                <p class="mb-0">Hello! I'm your Career Path Assistant. How can I help you today?</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer p-3">
                        <form id="chat-form" class="d-flex">
                            <input type="text" id="user-input" class="form-control me-2" placeholder="Type your message..." autocomplete="off" required>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-paper-plane"></i> Send
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .chat-messages {
            background-color: #f8f9fa;
            border-radius: 0.25rem 0.25rem 0 0;
        }
        
        .message {
            display: flex;
            margin-bottom: 1rem;
        }
        
        .user-message {
            justify-content: flex-end;
        }
        
        .bot-message {
            justify-content: flex-start;
        }
        
        .message-content {
            max-width: 80%;
            word-wrap: break-word;
        }
        
        .user-message .message-content {
            background-color: #e3f2fd;
            color: #0d6efd;
        }
        
        .bot-message .message-content {
            background-color: #f1f1f1;
            color: #333;
        }
        
        #typing-indicator {
            display: none;
            margin-bottom: 1rem;
        }
        
        .typing-dot {
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: #6c757d;
            margin: 0 2px;
            opacity: 0.6;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            const chatForm = $('#chat-form');
            const userInput = $('#user-input');
            const chatMessages = $('#chat-messages');
            
            chatForm.on('submit', function(e) {
                e.preventDefault();
                const message = userInput.val().trim();
                
                if (message) {
                    // Add user message to chat
                    addMessage('user', message);
                    userInput.val('');
                    
                    // Show typing indicator
                    const typingIndicator = $('<div id="typing-indicator">\
                        <div class="message bot-message">\
                            <div class="message-content p-2 rounded">\
                                <div class="typing-dot"></div>\
                                <div class="typing-dot"></div>\
                                <div class="typing-dot"></div>\
                            </div>\
                        </div>\
                    </div>');
                    
                    chatMessages.append(typingIndicator);
                    typingIndicator.fadeIn(200);
                    
                    // Scroll to bottom
                    chatMessages.scrollTop(chatMessages[0].scrollHeight);
                    
                    // Send message to server
                    $.ajax({
                        url: '/Chatbot/SendMessage',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ message: message }),
                        success: function(response) {
                            // Remove typing indicator
                            typingIndicator.fadeOut(200, function() {
                                $(this).remove();
                                // Add bot response
                                addMessage('bot', response.response);
                            });
                        },
                        error: function() {
                            typingIndicator.fadeOut(200, function() {
                                $(this).remove();
                                addMessage('bot', 'Sorry, I encountered an error. Please try again.');
                            });
                        }
                    });
                }
            });
            
            function addMessage(sender, text) {
                const messageClass = sender === 'user' ? 'user-message' : 'bot-message';
                const senderName = sender === 'user' ? 'You' : 'Assistant';
                
                const messageElement = $(`
                    <div class="message ${messageClass} mb-3">
                        <div class="message-content p-2 rounded">
                            <small class="text-muted">${senderName}</small>
                            <p class="mb-0">${text}</p>
                        </div>
                    </div>
                `);
                
                chatMessages.append(messageElement);
                chatMessages.scrollTop(chatMessages[0].scrollHeight);
            }
            
            // Auto-focus the input field
            userInput.focus();
        });
    </script>
}
